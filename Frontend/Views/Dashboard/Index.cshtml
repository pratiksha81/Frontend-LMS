@model Frontend.Models.DashBoard
@inject IHttpContextAccessor HttpContextAccessor
@{
    ViewData["Title"] = "Dashboard Info";
    var UserData = HttpContextAccessor.HttpContext.Session.GetString("User");

}

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
 
<style>
    body, html {
        height: 100vh;
        margin: 0;
        padding: 0;
        font-family: Arial, sans-serif;
    }
 
    .header {
        height: 65px;
        margin-left: 222px;
        background: #fff;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        display: flex;
        align-items: center;
        padding: 0 20px;
    }
 
        .header h2 {
            font-size: 18px;
            margin: 0;
            display: flex;
            align-items: center;
        }
 
        .header img {
            width: 35px;
            height: 35px;
            margin-right: 10px;
        }
 
    .body {
        background: #F2F2F2;
        padding: 20px;
        margin-left: 222px;
        height: 100vh;
        overflow-y: auto;
    }
 
    .chart-container {
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
    }
 
    .chart {
        max-width: 300px;
        max-height: 300px;
        width: 100%;
        height: auto;
    }
 
    .legend-card {
        background: #fff;
        border-radius: 5px;
        padding: 15px;
        display: flex;
        align-items: center;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }
 
    .stats-card {
        background: #fff;
        border-radius: 5px;
        padding: 20px;
        display: flex;
        align-items: center;
        margin-bottom: 20px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }
 
        .stats-card img {
            width: 50px;
            height: 50px;
            margin-right: 15px;
        }
 
        .stats-card h3 {
            font-size: 28px;
            margin: 0;
        }
 
        .stats-card p {
            font-size: 14px;
            margin: 0;
            color: #777;
        }
 
    #overdue-borrowers {
        background: #fff;
        border-radius: 5px;
        padding: 20px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }
 
        #overdue-borrowers h5 {
            font-size: 18px;
            margin-bottom: 15px;
        }
 
    .borrower {
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 10px 0;
        border-bottom: 1px solid #ddd;
    }
 
        .borrower:last-child {
            border-bottom: none;
        }
 
        .borrower img {
            width: 30px;
            height: 30px;
            margin-right: 10px;
        }
 
        .borrower span {
            font-size: 14px;
        }
</style>
 
<div class="header">
<img src="~/images/PageIcon/AutherPageIcon.png" alt="User Icon">
    @* <h2>@UserData</h2> *@
<h2>Kapil Dev Thakur</h2>
</div>
<div class="body">
<div class="row">
<!-- Left Column (Chart Section) -->
<div class="col-lg-6">
<div class="chart-container">
<canvas id="pieChart" class="chart"></canvas>
</div>
<div class="legend-card mt-4">
<img src="~/images/PageIcon/Di.png" alt="Legend Icon">
<div class="ms-3">
<div class="legend-item"> <img src="~/images/TBB.png" alt="Legend Icon"> Total Borrowed Books </div>
<div class="legend-item"> <img src="~/images/TRB.png" alt="Legend Icon"> Total Returned Books</div>
</div>
</div>
</div>
 
        <!-- Right Column (Stats Cards) -->
<div class="col-lg-6">
 
                <div class="col-lg-12">
<div class="stats-card">
<img src="~/images/PageIcon/u.png" alt="Icon">
<div>
<h3>@Model.TotalStudents</h3>
<p>Total Student</p>
</div>
</div>
</div>
<div class="col-lg-12">
<div class="stats-card">
<img src="~/images/PageIcon/u.png" alt="Icon">
<div>
<h3>@Model.TotalBook</h3>
<p>Total Book Count</p>
</div>
</div>
</div>
<div class="col-lg-12">
<div class="stats-card">
<img src="~/images/PageIcon/u.png" alt="Icon">
<div>
<h3>@Model.TotalTransaction</h3>
<p>Transactions Count</p>
</div>
</div>
 
            <div id="overdue-borrowers" class="mt-4">
                @await Component.InvokeAsync("MyComponent")
</div>
</div>
</div>
</div>
</div>
<script>
    const pieChartData = {
        labels: @Html.Raw(Json.Serialize(new[] { "Total Borrowed Books", "Total Returned Books" })),
        datasets: [{
            data: @Html.Raw(Json.Serialize(new[] { Model.TotalBooksBorrowed, Model.TotalBooksReturned })),
            backgroundColor: ['#255D81', '#317FB1']
        }]
    };
 
    const ctx = document.getElementById('pieChart').getContext('2d');
        const pieChart = new Chart(ctx, {
        type: 'pie',
        data: pieChartData,
        options: {
            responsive: true,
            maintainAspectRatio: true, // Keeps the aspect ratio intact
            plugins: {
                legend: {
                    display: false
                }
            },
            layout: {
                padding: {
                    top: 10,
                    bottom: 10,
                    left: 10,
                    right: 10
                }
            }
        }
    });
 
 
    const legendContainer = document.getElementById('chartLegend');
    const labels = pieChartData.labels;
    const colors = pieChartData.datasets[0].backgroundColor;
 
    labels.forEach((label, index) => {
        const legendItem = document.createElement('div');
        legendItem.className = 'legend-item';
 
        const colorBox = document.createElement('div');
        colorBox.className = 'legend-color';
        colorBox.style.backgroundColor = colors[index];
 
        const labelText = document.createElement('span');
        labelText.textContent = label;
 
        legendItem.appendChild(colorBox);
        legendItem.appendChild(labelText);
        legendContainer.appendChild(legendItem);
    });
</script>

